#include <fstream>
#include <iostream>

using namespace std;

void FileF(int size) {
    int ran;
    ofstream f("A.dat");

    for (int i = 0; i < size; i++) {
        ran = rand() % 100 + 1;
        f << ran << " ";
    }
    f.close();
}

void merge(int *a, int start, int split, int stop) {
    int pos1 = start;
    int pos2 = split + 1;
    int pos3 = 0;

    int *temp = new int[stop - start + 1];
    while (pos1 <= split && pos2 <= stop) {
        if (a[pos1] < a[pos2])
            temp[pos3++] = a[pos1++];
        else
            temp[pos3++] = a[pos2++];
    }
    while (pos2 <= stop) temp[pos3++] = a[pos2++];
    while (pos1 <= split) temp[pos3++] = a[pos1++];
    for (pos3 = 0; pos3 < stop - start + 1; pos3++)
        a[start + pos3] = temp[pos3];
}

void mergeSort(int *a, int start, int stop) {
    int split;
    if (start < stop) {
        split = (start + stop) / 2;

        mergeSort(a, start, split);
        mergeSort(a, split + 1, stop);
        merge(a, start, split, stop);
    }
}

void arrOutput(int *arr, int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << endl;
    }
}

int main() {
    srand(time(NULL));
    int randSize = rand() % 100 + 1;
    int *arr = new int[randSize];
    int count;

    FileF(randSize);

    ifstream readFile("A.dat");
    for (int i = 0; i < randSize; i++) {
        readFile >> arr[i];
        count++;
    }
    readFile.close();

    mergeSort(arr, 0, randSize - 1);
    arrOutput(arr, randSize);
}
